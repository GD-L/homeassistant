#Telegram test with '/ping' should reply 'pong'
- alias: 'Telegram bot that reply pong to ping'
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/ping'
  action:
    - service: notify.telegram_notify_Sara
      data:
        message: 'pong'
    - service: notify.telegram_notify_Greg
      data:
        message: 'pong'
        
- alias: 'Morning Weather'
  trigger: 
    platform: time
    at: "06:44:00"
  action:
    - service: notify.telegram_notify_Greg
      data: 
        message: "Today's forecast calls for a high of {{states.sensor.dark_sky_daytime_high_temperature_0d.state|round(0)}}° and a low of: {{states.sensor.dark_sky_overnight_low_temperature_0d.state|round(0)}}°. \n \n Currently, it's {{state_attr('weather.dark_sky', 'temperature')}}° and {{states.sensor.dark_sky_summary.state}} outside.\n \n Wind speeds: {{state_attr('weather.dark_sky', 'wind_speed')}} mph \n Humidity: {{state_attr('weather.dark_sky', 'humidity')}}% \n Sunrise: {{states.sensor.sunrise.state}}AM \n Sunset: {{states.sensor.sunset.state}}PM"

- alias: 'qBitTorrent Down Notification'
  trigger:
    - platform: state
      entity_id: sensor.qbittorrent_status
      to: 'unavailable'
      for:
        seconds: 60
  action:
    - service: notify.telegram_notify_Greg
      data:
        title: "*qBitTorrent is Down*"
        message: "qBitTorrent has lost connection, log on to restart it"


- alias: Update Available Notification
  trigger:
    - platform: state
      entity_id: binary_sensor.updater
      from: 'off'
      to: 'on'
  action:
    - service: notify.telegram_notify_Greg
      data:
        message: "Home Assistant {{ state_attr('binary_sensor.updater', 'newest_version') }} is available."

- alias: Version Check
  trigger: 
    platform: event
    event_type: telegram_command
    event_data:
      command: '/version'
  action: 
    - service: telegram_bot.send_message
      data: 
        chat_id: '{{ trigger.event.data.chat_id }}'
        message: "The current version is {{state_attr('binary_sensor.updater','newest_version')}},
                  {% if states('binary_sensor.updater') == 'on'%} You are not up to date
            {% else %} You are up to date
            {% endif %}"

- alias: Stauts Report
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/statusreport'
  action:
    - service: telegram_bot.send_message
      data:
        chat_id: '{{ trigger.event.data.chat_id }}'
        message: 'You asked for a status report'